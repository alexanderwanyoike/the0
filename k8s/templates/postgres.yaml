{{- if .Values.postgresql.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "the0.fullname" . }}-postgres
  labels:
    {{- include "the0.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.postgresql.port }}
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    {{- include "the0.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "the0.fullname" . }}-postgres
  labels:
    {{- include "the0.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "the0.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        {{- include "the0.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: postgres
              containerPort: {{ .Values.postgresql.port }}
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: "the0_oss"
            - name: POSTGRES_USER
              value: "the0"
            - name: POSTGRES_PASSWORD
              value: "the0_password"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U the0 -d the0_oss
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U the0 -d the0_oss
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          {{- end }}
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ include "the0.fullname" . }}-postgres-pvc
      {{- end }}

{{- if .Values.postgresql.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "the0.fullname" . }}-postgres-pvc
  labels:
    {{- include "the0.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.postgresql.persistence.size }}
{{- end }}
{{- end }}