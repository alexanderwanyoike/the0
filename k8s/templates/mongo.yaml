{{- if .Values.mongodb.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "the0.fullname" . }}-mongo
  labels:
    {{- include "the0.labels" . | nindent 4 }}
    app.kubernetes.io/component: mongo
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.mongodb.port }}
      targetPort: mongo
      protocol: TCP
      name: mongo
  selector:
    {{- include "the0.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: mongo

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "the0.fullname" . }}-mongo
  labels:
    {{- include "the0.labels" . | nindent 4 }}
    app.kubernetes.io/component: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "the0.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mongo
  template:
    metadata:
      labels:
        {{- include "the0.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mongo
    spec:
      containers:
        - name: mongo
          image: {{ .Values.mongodb.image }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: mongo
              containerPort: {{ .Values.mongodb.port }}
              protocol: TCP
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "the0_mongo_password"
            - name: MONGO_INITDB_DATABASE
              value: "bot_runner"
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.runCommand("ping")
                - --quiet
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.runCommand("ping")
                - --quiet
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
          {{- if .Values.mongodb.persistence.enabled }}
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
          {{- end }}
      {{- if .Values.mongodb.persistence.enabled }}
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: {{ include "the0.fullname" . }}-mongo-pvc
      {{- end }}

{{- if .Values.mongodb.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "the0.fullname" . }}-mongo-pvc
  labels:
    {{- include "the0.labels" . | nindent 4 }}
    app.kubernetes.io/component: mongo
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.mongodb.persistence.size }}
{{- end }}
{{- end }}