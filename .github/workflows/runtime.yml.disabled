name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  # Will be set to ghcr.io/owner/repo-name
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        file: ./api/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-runtime:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/runtime
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Runtime image
      uses: docker/build-push-action@v5
      with:
        context: ./runtime
        file: ./runtime/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  update-release-compose:
    needs: [build-api, build-runtime, build-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Update release compose file
      run: |
        # Update docker-compose-release.yml with new image tags
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          TAG="latest"
        else
          TAG="${{ github.ref_name }}"
        fi
        
        sed -i "s|THE0_API_IMAGE:-.*}|THE0_API_IMAGE:-${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:${TAG}}|" docker/docker-compose-release.yml
        sed -i "s|THE0_RUNTIME_IMAGE:-.*}|THE0_RUNTIME_IMAGE:-${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/runtime:${TAG}}|" docker/docker-compose-release.yml  
        sed -i "s|THE0_FRONTEND_IMAGE:-.*}|THE0_FRONTEND_IMAGE:-${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:${TAG}}|" docker/docker-compose-release.yml
        
    - name: Commit updated compose file
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "chore: update docker images to ${{ github.ref_name }}"
        file_pattern: docker/docker-compose-release.yml